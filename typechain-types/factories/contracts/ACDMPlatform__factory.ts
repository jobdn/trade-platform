/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ACDMPlatform,
  ACDMPlatformInterface,
} from "../../contracts/ACDMPlatform";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "ACDMToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "roundTime",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ACDM_AMOUNT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_ACDMToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "_balances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_roundStatus",
    outputs: [
      {
        internalType: "enum ACDMPlatform.RoundStatus",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_roundTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_tradeStock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "buyACDM",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_referer",
        type: "address",
      },
    ],
    name: "register",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "startSaleRound",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "users",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOfACDM",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "referer",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isReferer",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "isExists",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000d3738038062000d3783398181016040528101906200003791906200016c565b600160008190555081600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806003819055506000600560006101000a81548160ff02191690836001811115620000b057620000af620001b3565b5b0217905550620186a06001819055505050620001e2565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000f982620000cc565b9050919050565b6200010b81620000ec565b81146200011757600080fd5b50565b6000815190506200012b8162000100565b92915050565b6000819050919050565b620001468162000131565b81146200015257600080fd5b50565b60008151905062000166816200013b565b92915050565b60008060408385031215620001865762000185620000c7565b5b600062000196858286016200011a565b9250506020620001a98582860162000155565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b610b4580620001f26000396000f3fe6080604052600436106100915760003560e01c80634420e486116100595780634420e4861461014c5780636ebcf60714610175578063a87430ba146101b2578063b59bfa03146101f2578063c25f18361461020957610091565b80630151728f146100965780630b0e62f0146100c15780630b78df90146100cb5780631f71994f146100f6578063380551cd14610121575b600080fd5b3480156100a257600080fd5b506100ab610234565b6040516100b8919061071b565b60405180910390f35b6100c961023a565b005b3480156100d757600080fd5b506100e061034b565b6040516100ed919061071b565b60405180910390f35b34801561010257600080fd5b5061010b610351565b60405161011891906107ad565b60405180910390f35b34801561012d57600080fd5b50610136610364565b604051610143919061071b565b60405180910390f35b34801561015857600080fd5b50610173600480360381019061016e919061082b565b61036a565b005b34801561018157600080fd5b5061019c6004803603810190610197919061082b565b61062d565b6040516101a9919061071b565b60405180910390f35b3480156101be57600080fd5b506101d960048036038101906101d4919061082b565b610645565b6040516101e99493929190610882565b60405180910390f35b3480156101fe57600080fd5b506102076106af565b005b34801561021557600080fd5b5061021e6106dc565b60405161022b91906108c7565b60405180910390f35b60035481565b60026000541415610280576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102779061093f565b60405180910390fd5b6002600081905550600034116102cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102c2906109ab565b60405180910390fd5b600060018111156102df576102de610736565b5b600560009054906101000a900460ff16600181111561030157610300610736565b5b14610341576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161033890610a17565b60405180910390fd5b6001600081905550565b60045481565b600560009054906101000a900460ff1681565b60015481565b600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160159054906101000a900460ff16156103fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103f190610a83565b60405180910390fd5b600760008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160159054906101000a900460ff16610489576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048090610aef565b60405180910390fd5b6040518060800160405280600081526020018273ffffffffffffffffffffffffffffffffffffffff16815260200160001515815260200160011515815250600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160010160146101000a81548160ff02191690831515021790555060608201518160010160156101000a81548160ff021916908315150217905550905050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461062a576001600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160146101000a81548160ff0219169083151502179055505b50565b60066020528060005260406000206000915090505481565b60076020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160149054906101000a900460ff16908060010160159054906101000a900460ff16905084565b6000600560006101000a81548160ff021916908360018111156106d5576106d4610736565b5b0217905550565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000819050919050565b61071581610702565b82525050565b6000602082019050610730600083018461070c565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6002811061077657610775610736565b5b50565b600081905061078782610765565b919050565b600061079782610779565b9050919050565b6107a78161078c565b82525050565b60006020820190506107c2600083018461079e565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107f8826107cd565b9050919050565b610808816107ed565b811461081357600080fd5b50565b600081359050610825816107ff565b92915050565b600060208284031215610841576108406107c8565b5b600061084f84828501610816565b91505092915050565b610861816107ed565b82525050565b60008115159050919050565b61087c81610867565b82525050565b6000608082019050610897600083018761070c565b6108a46020830186610858565b6108b16040830185610873565b6108be6060830184610873565b95945050505050565b60006020820190506108dc6000830184610858565b92915050565b600082825260208201905092915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000610929601f836108e2565b9150610934826108f3565b602082019050919050565b600060208201905081810360008301526109588161091c565b9050919050565b7f506c617466726f6d3a207a65726f206d73672e76616c75650000000000000000600082015250565b60006109956018836108e2565b91506109a08261095f565b602082019050919050565b600060208201905081810360008301526109c481610988565b9050919050565b7f506c6174666f726d3a206f6e6c792073616c6520726f756e6400000000000000600082015250565b6000610a016019836108e2565b9150610a0c826109cb565b602082019050919050565b60006020820190508181036000830152610a30816109f4565b9050919050565b7f506c6166726f746d3a206578697374656e742075736572000000000000000000600082015250565b6000610a6d6017836108e2565b9150610a7882610a37565b602082019050919050565b60006020820190508181036000830152610a9c81610a60565b9050919050565b7f506c6174666f726d3a206e6f74206578697374656e7420726566657265720000600082015250565b6000610ad9601e836108e2565b9150610ae482610aa3565b602082019050919050565b60006020820190508181036000830152610b0881610acc565b905091905056fea2646970667358221220ac8ae71f3d0e491f3fbe836273966864ca904f5940e0c343001ce62147c1a08964736f6c634300080b0033";

type ACDMPlatformConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ACDMPlatformConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ACDMPlatform__factory extends ContractFactory {
  constructor(...args: ACDMPlatformConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    ACDMToken: string,
    roundTime: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ACDMPlatform> {
    return super.deploy(
      ACDMToken,
      roundTime,
      overrides || {}
    ) as Promise<ACDMPlatform>;
  }
  override getDeployTransaction(
    ACDMToken: string,
    roundTime: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(ACDMToken, roundTime, overrides || {});
  }
  override attach(address: string): ACDMPlatform {
    return super.attach(address) as ACDMPlatform;
  }
  override connect(signer: Signer): ACDMPlatform__factory {
    return super.connect(signer) as ACDMPlatform__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ACDMPlatformInterface {
    return new utils.Interface(_abi) as ACDMPlatformInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ACDMPlatform {
    return new Contract(address, _abi, signerOrProvider) as ACDMPlatform;
  }
}
